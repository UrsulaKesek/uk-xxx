{"version":3,"sources":["UserList/index.js","NewList/index.js","MatchMatch/Card.js","MatchMatch/spinner.gif","MatchMatch/Playfield.js","App.js","reportWebVitals.js","index.js"],"names":["UserList","useState","id","name","list","updateList","handleRemoveItem","e","target","getAttribute","filter","item","className","map","onClick","NewList","key","Card","card","onCardOpen","matched","open","src","image","getCard","Playfield","pairs","loading","setLoading","images","setImages","turns","setTurns","pairsMatched","setPairsMatched","openedCards","setOpenedCards","deck","setDeck","useEffect","getImages","length","generateCards","openCard","newDeck","forEach","element","index","number","opened","push","setTimeout","handlePossibleMatch","cardsMatch","openedCardNumbers","includes","closeCards","cards","pair","a","fetchedImages","axios","get","response","request","responseURL","closedDeck","cardNumber","i","shuffleDeck","Math","random","sort","b","spinner","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ae66f5ca.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport './UserList.css';\n\nconst UserList = () => {\n  const Users = [\n    { id: \"0\", name: \"James\" },\n    { id: \"1\", name: \"Nora\" },\n    { id: \"2\", name: \"Matthew\" },\n    { id: \"3\", name: \"Joe\" },\n    { id: \"4\", name: \"Susan\" },\n    { id: \"5\", name: \"Ursula\" },\n  ];\n  const [list, updateList] = useState(Users);\n\n  const handleRemoveItem = (e) => {\n    const name = e.target.getAttribute(\"name\");\n    updateList(list.filter((item) => item.name !== name));\n  };\n  return (\n    <div className=\"list\">\n      {list.map((item) => {\n        return (\n          <>\n            <li key={item.id} className=\"users\">\n              {item.name}\n            </li>\n            <button className=\"rfp\" name={item.name} onClick={handleRemoveItem}>\n            -\n            </button>\n          </>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default UserList;\n","import React, { useState } from \"react\";\nimport './NewList.css';\n\nconst NewList = () => {\n  const defaultList = [\n    { key: \"0\", name: \"ItemOne\" },\n    { key: \"1\", name: \"ItemTwo\" },\n    { key: \"2\", name: \"ItemThree\" },\n  ];\n\n  const [list, updateList] = useState(defaultList);\n\n  const handleRemoveItem = (e) => {\n    const name = e.target.getAttribute(\"name\");\n    updateList(list.filter((item) => item.name !== name));\n  };\n\n  return (\n    <div className=\"newList\">\n      {list.map((item) => {\n        return (\n          <>\n            <p key={item.key} className=\"stuff\">\n              {item.name}\n            </p>\n            <button\n              className=\"thing\"\n              name={item.name}\n              onClick={handleRemoveItem}\n            >\n              remove\n            </button>\n          </>\n        );\n      })}\n    </div>\n  );\n};\nexport default NewList;\n","import React from 'react'\nimport './Card.css'\n\nconst Card = ({ card, onCardOpen }) => {\n\n  const clickHandler = () => {\n    if (!card.open && !card.matched) {\n      onCardOpen(card)\n    }\n  }\n\n  const getCard = () => {\n    if (card.matched) {\n      return\n    } else if (card.open) {\n      return <img src={card.image} />\n    }\n\n    return <div className=\"not-opened\">?</div>\n  }\n\n  return (\n    <div className={\"card\" + (card.matched ? \" matched\" : \"\")} onClick={clickHandler}>\n      {getCard()}\n    </div>\n  )\n}\n\nexport default Card\n\n","export default __webpack_public_path__ + \"static/media/spinner.af66a87a.gif\";","import React, { useEffect, useState } from 'react'\nimport './Playfield.css'\nimport Card from './Card'\nimport axios from 'axios'\nimport spinner from './spinner.gif'\n\nconst Playfield = ({ pairs }) => {\n  const pairVisibleInMilliseconds = 2000\n  const [loading, setLoading] = useState(true)\n  const [images, setImages] = useState([])\n  const [turns, setTurns] = useState(0)\n  const [pairsMatched, setPairsMatched] = useState(0)\n  const [openedCards, setOpenedCards] = useState([])\n  const [deck, setDeck] = useState([])\n  const picsumApiUrl = 'https://picsum.photos/200'\n\n  useEffect(() => {\n    getImages()\n  }, [])\n\n  useEffect(() => {\n    if (images.length === pairs) {\n      generateCards()\n      setLoading(false)\n    }\n  }, [images])\n\n  const openCard = (card) => {\n    // Don't open the card if we already have 2 cards face up\n    if (openedCards.length === 2) {\n      return\n    }\n\n    let newDeck = [...deck]\n\n    deck.forEach((element, index) => {\n      if (element.number === card.number) {\n        newDeck[index].open = true\n        return\n      }\n    })\n\n    setDeck(newDeck)\n\n    let opened = openedCards\n    opened.push(card)\n    setOpenedCards(openedCards)\n\n    if (opened.length === 2) {\n      setTimeout(() => {\n        handlePossibleMatch(opened)\n      }, pairVisibleInMilliseconds)\n    }\n  }\n\n  const handlePossibleMatch = (openedCards) => {\n    let newDeck\n\n    if (cardsMatch(openedCards)) {\n      const openedCardNumbers = [openedCards[0].number, openedCards[1].number]\n      newDeck = [...deck]\n\n      deck.forEach((element, index) => {\n        if (openedCardNumbers.includes(element.number)) {\n          newDeck[index].open = false\n          newDeck[index].matched = true\n        }\n      })\n\n      setPairsMatched(pairsMatched + 1)\n      setDeck(newDeck)\n    } else {\n      closeCards()\n    }\n\n    setTurns(turns + 1)\n    setOpenedCards([])\n  }\n\n  const cardsMatch = (cards) => {\n    return cards[0].pair === cards[1].pair\n  }\n\n  const getImages = async () => {\n    let fetchedImages = []\n\n    while (fetchedImages.length < pairs) {\n      const response = await axios.get(picsumApiUrl)\n\n      if (response.request.responseURL) {\n        fetchedImages.push(response.request.responseURL)\n      }\n    }\n\n    setImages(fetchedImages)\n  }\n\n  const closeCards = () => {\n    let closedDeck = []\n\n    deck.forEach((card) => {\n      card.open = false\n      closedDeck.push(card)\n    })\n\n    setDeck(closedDeck)\n  }\n\n  const resetGame = () => {\n    generateCards()\n    setTurns(0)\n    setPairsMatched(0)\n  }\n\n  const generateCards = () => {\n    let cards = []\n    let cardNumber = 0\n\n    images.forEach((image, key) => {\n      for (let i = 0; i < 2; i++) {\n        cardNumber += 1\n\n        cards.push({\n          number: cardNumber,\n          pair: key,\n          image: image,\n          open: false,\n          matched: false\n        })\n      }\n    })\n\n    setDeck(shuffleDeck(cards))\n  }\n\n  const shuffleDeck = (cards) => {\n    return cards\n      .map(a => [Math.random(), a])\n      .sort((a, b) => a[0] - b[0])\n      .map(a => a[1])\n  }\n\n  return (\n    <div className={\"playfield\"}>\n      { loading && (\n        <div className=\"spinner\">\n          <div>\n            <img src={spinner} />\n          </div>\n          <span>Loading game...</span>\n        </div>\n      )}\n\n      {!loading && (\n        <>\n          <div className=\"statistics\">\n            <span>Turns: {turns}</span>\n            <span>Pairs: {pairsMatched} of {pairs}</span>\n\n            { pairsMatched === pairs && (\n              <button className=\"reset\"onClick={resetGame}>New game</button>\n            )}\n          </div>\n          <div className=\"deck\"> \n          { deck.map(card => {\n              return <Card\n                key={card.number}\n                card={card}\n                onCardOpen={openCard}\n              />\n             \n            })\n          }\n          \n        </div>\n        </>\n      )}\n    </div>\n  )\n}\n\nexport default Playfield\n","import \"./App.css\";\nimport UserList from \"./UserList\";\nimport NewList from \"./NewList\";\nimport Playfield from \"./MatchMatch/Playfield\"\nfunction App() {\n  return (\n    <div className=\"App\">\n      <>\n      <Playfield pairs={12} />\n        <UserList />\n        <NewList />\n\n      </>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}